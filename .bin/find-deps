#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var _ = require('lodash');

var webpackDeps = require('../index');

var statsFileName = process.argv[2] || 'webpack-stats.json';
var statsFilePath = path.join(process.cwd(), statsFileName);

var filesToCheck = [
  // './nav-prototype-a/actions/ProjectActions.js',
  // './nav-prototype-a/actions/ChildProjectActions.js',
  // './utils/Constants.js'
];

// why bother with callbacks when you can block?
var stats = JSON.parse(fs.readFileSync(statsFilePath, 'utf8'));

process.stdin.resume();
process.stdin.setEncoding('utf8');
process.stdin.on('data', function(data) {
  filesToCheck = filesToCheck.concat(data.split('\n').map(function(file) { return './' + file }));
});

process.stdin.on('end', function () {
  var dependantsMap = webpackDeps.getDependentsMap(stats);
  console.log(webpackDeps.getAllDependentsForFiles(filesToCheck, dependantsMap))
});
